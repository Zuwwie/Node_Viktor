{
  "swagger": "2.0",
  "info": {
    "title": "Victor_NODE",
    "version": "1.0",
    "description": "This is Hello Node",
    "contact": {
      "email": "nazar.gavronsky.mail@gmail.com",
      "name": "Nazar"
    }
  },
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create user",
        "operationId": "postUser",
        "description": "This is how to post user in DB",
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "default": "Dimas",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "default": "example@email.com",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "default": "Aadmin1",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "User was created",
            "schema": {
              "$ref": "#/definitions/singleUser"
            }
          },
          "400": {
            "description": "Just an error",
            "schema": {
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Something went wrong"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get All Users",
        "operationId": "getAllUsers",
        "description": "This is how to post user in DB",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/singleUser"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "security": [
        ],
        "summary": "Delete User by himself ( use_token )",
        "operationId": "dellUserHimself",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "default": "ACCESS_TOKEN",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User not found"
          },
          "401": {
            "description": "Invalid token"
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID",
        "operationId": "getUserByID",
        "description": "This is how to get user at DB use property ID",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "user_id",
            "type": "string",
            "default": "USER_ID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/singleUser"
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete User by ID",
        "operationId": "deleteUserByID",
        "description": "This is how to delete user at DB use property ID",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "user_id",
            "type": "string",
            "default": "USER_ID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/singleUser"
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          }
        }
      },
      "put": {
        "summary": "Update User Name",
        "operationId": "updateUserName",
        "description": "This is how to update user name in DB",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "default": "ACCESS_TOKEN",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "in": "path",
            "name": "user_id",
            "required": true,
            "default": "USER_ID"
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "default": "VanyaAdmin"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "singleUser": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "dhsfsufugq3udguysh",
          "description": "Mongo DB ID"
        },
        "email": {
          "type": "string",
          "example": "example@gmail.com"
        },
        "name": {
          "type": "string",
          "example": "Nazik"
        }
      }
    }
  }
}